@{
    ViewData["Title"] = "Home Page";
}

    <div class="placeholders mb-2">
        <div class="row d-flex justify-content-start">
            <div class="col-md-2 mb-3 placeholder">
                <img class="img-fluid " alt="200x200" src="~/Images/200w.gif">
            </div>
            <div class="col-md-3" style="border:1px solid black;">
                <h2>Regulatory Alignment Module</h2>
                <p>
                    @Html.ActionLink("Start", "Regulatory1", "Camel")
                </p>
            </div>
            <div class="col-md-3" style="border:1px solid black;">
                <h2>CAMELS Knowledge Module</h2>
                <p>
                    @Html.ActionLink("Start", "RegulatoryKnowledgeAssessment", "Camel")
                    @*<input type="button" value="Start" onclick="window.location.href('@Url.Action("RegulatoryKnowledgeAssessment","Camel")')" />*@
                </p>
            </div>
            <div class="col-md-3" style="border:1px solid black;">
                <h2>CAMELS Regulatory Capital Module</h2>
                <p>
                    @Html.ActionLink("Start", "RegulatoryCapitalAssessment", "Camel")

                    @*<input type="button" value="Start" onclick="window.location.href('@Url.Action("RegulatoryCapitalAssessment","Camel")')" />*@
                </p>
            </div>
            <div class="col-md-3">
                <img src="~/images/camel.jpg" />
            </div>
            <div class="col-md-3" style="border:1px solid black;">
                <h2>CAMELS Calculating Overall IQ</h2>
                <p>
                    @Html.ActionLink("Start", "CalculatingRegulatoryIQ", "Camel")

                    @*<input type="button" value="Start" onclick="window.location.href('@Url.Action("RegulatoryCapitalAssessment","Camel")')" />*@
                </p>
            </div>
            <div class="col-md-3" style="border:1px solid black;">
                <h2>CAMELS Overall Relationship Knowledge</h2>
                <p>
                    @Html.ActionLink("Start", "OveralRelationKnowledge1", "Camel")

                    @*<input type="button" value="Start" onclick="window.location.href('@Url.Action("RegulatoryCapitalAssessment","Camel")')" />*@
                </p>
            </div>


            @*<div class="col-md-3" style="border:1px solid black;">
            <h2>Strategic Relationship Alignment Assessment Module</h2>
            <p>
                Description
            </p>
            <p>
                <kendo-button name="PrimaryButton" class="textButton k-primary">Start</kendo-button>
            </p>
        </div>
        <div class="col-md-2 mb-3 placeholder">
            <img class="img-fluid " alt="200x200" height="200" width="200" src="~/Images/200.png">
        </div>
        <div class="col-md-3" style="border:1px solid black;">
            <h2>Strategic Relationship Strength Module</h2>
            <p>
                <kendo-button name="PrimaryButton" class="textButton k-primary">Start</kendo-button>
            </p>
        </div>
        <div class="col-md-3" style="border:1px solid black;">
            <h2>Strategic Relationship Strategy Execution Module</h2>
            <p>
                <kendo-button name="PrimaryButton" class="textButton k-primary">Start</kendo-button>
            </p>
        </div>
        <div class="col-md-3" style="border:1px solid black;">
            <h2>Strategic Relationship Strategy Resource Module</h2>
            <p>
                Description
            </p>
            <p>
                <kendo-button name="PrimaryButton" class="textButton k-primary">Start</kendo-button>
            </p>
        </div>*@
        </div>
       
        <div class="col-md-3">
            <h2>Online Guidance and Support</h2>
            @(Html.Kendo().Chat()
                        .Name("chat")
                        .Toolbar(toolbar =>
                        {
                            toolbar.Toggleable(true);
                            toolbar.Buttons(buttons =>
                            {
                                buttons.Add().Name("restart").IconClass("k-icon k-i-reload");
                            });
                        })
                        .Events(e =>
                        {
                            e.Post("onPost");
                            e.ToolClick("onToolClick");
                        })
            )
        </div>
    </div>

@*<div class="row">
    <div class="col-12">


        <kendo-grid name="grid" height="550">
                <columns>
                    <column field="OrderID" title="Order ID">
                        <filterable enabled="false"></filterable>
                    </column>
                    <column field="Freight" title="Freight" />
                    <column field="OrderDate" title="Order Date" format="{0:MM/dd/yyyy}" />
                    <column field="ShipName" title="Ship Name" />
                    <column field="ShipCity" title="Ship City" />
                </columns>
                <scrollable enabled="true" />
                <sortable enabled="true" />
                <pageable enabled="true" />
                <filterable enabled="true" />
                <datasource type="DataSourceTagHelperType.Ajax" page-size="20">
                    <transport>
                        <read url="@Url.Action("Orders_Read", "Grid")" />
                    </transport>
                </datasource>
            </kendo-grid>
    </div>
  
</div>*@



<style>
    .k-card > img.k-card-image {
        height: 134px;
        display: block;
    }

    .quoteCard span {
        display: block;
        float: right;
    }
</style>

<!-- Load Promise Polyfill. Required by the DialogFlow Client API.-->
<script src="https://www.promisejs.org/polyfills/promise-6.1.0.js"></script>

<!-- Load DialogFlow Client API -->
<script src="https://cdn.rawgit.com/dialogflow/dialogflow-javascript-client/50e82e62/target/ApiAi.min.js"></script>
<script>

    $(document).ready(function () {
        var chat = $("#chat").data("kendoChat");

        window.agent = new DialogFlowAgent(chat);
    });

    function onPost(e) {
        agent.postMessage(e.text);
    }

    function onToolClick(e) {
        if (e.name === "restart") {
            e.sender.postMessage("restart");
        }
    }

    var QUOTE_CARD_TEMPLATE = kendo.template(
        '<div class="k-card k-card-type-rich">' +
        '<p><strong>Your company would be:</strong></p>' +
        '<div class="k-card-body quoteCard">' +
        '<div><strong>Type:</strong>' +
        '<span>#:coverage#</span></div>' +

        '<div><strong>Strategic model:</strong>' +
        '<span>#:make# #:model#</span></div>' +

        '<div><strong>Stragic score:</strong>' +
        '<span>#:worth#</span></div>' +

        '<div><strong>Start date:</strong>' +
        '<span>#:startDate#</span></div>' +

        '<hr/><div><strong>Total:</strong>' +
        '<span>#=kendo.toString(premium, "0.00")#</span></div>' +
        '</div>' +
        '</div>'
    );
    kendo.chat.registerTemplate("quote", QUOTE_CARD_TEMPLATE);

    var PLAN_CARD_TEMPLATE = kendo.template(
        '<div class="k-card k-card-type-rich">' +
        '<div class="k-card-body quoteCard">' +

        '# for (var i = 0; i < rows.length; i++) { #' +
        '<div><strong>#:rows[i].text#: </strong>' +
        '<span>#= kendo.toString(rows[i].value, "0.00") #</span></div>' +
        '# } #' +

        '<hr/><div><strong>Total:</strong>' +
        '<span>#= kendo.toString(premium, "0.00") #</span></div>' +

        '</div>' +
        '</div>'
    );
    kendo.chat.registerTemplate("payment_plan", PLAN_CARD_TEMPLATE);
</script>

<script>
    window.DialogFlowAgent = kendo.Class.extend({
        init: function (chat) {
            this.chat = chat;
            this.userInfo = {
                id: "botty",
                iconUrl: "https://demos.telerik.com/kendo-ui/content/chat/InsuranceBot.png",
                name: "Jim Wright"
            };

            this.agent = new ApiAi.ApiAiClient({ accessToken: "280344fb165a461a8ccfef7e1bb47e65" });

            this.postEvent("Welcome");

            this._timestamp;
        },

        postEvent: function (event) {
            this.agent
                .eventRequest(event)
                .then($.proxy(this.onResponse, this));
        },

        postMessage: function (text) {
            this.agent
                .textRequest(text)
                .then($.proxy(this.onResponse, this));
        },

        onResponse: function (response) {
            this._timestamp = response.timestamp;

            if (response.result && response.result.fulfillment) {
                var fulfillment = response.result.fulfillment;
                var data = fulfillment.data;

                this.renderMessages(fulfillment.messages);

                if (data && data.null) {
                    this.renderAttachments(data.null);

                    this.renderSuggestedActions(data.null.suggestedActions);
                }
            }
        },

        renderMessages: function (messages) {
            var that = this;

            $(messages).each(function (index, message) {
                switch (message.type) {
                    case 0:
                        that.chat.renderMessage({ type: "text", text: message.speech, timestamp: that._timestamp }, that.userInfo);
                        break;
                    case 2:
                        that.renderSuggestedActions(message.replies.map(function (reply) { return { title: reply, value: reply }; }));
                        break;
                    default:
                }
            });

        },

        renderAttachments: function (data) {
            var that = this;
            data.attachments = $(data.attachments).map(function (index, attachment) {
                return {
                    contentType: attachment.type || "heroCard",
                    content: attachment
                };
            }).toArray();

            this.chat.renderAttachments(data, this.userInfo);
        },

        renderSuggestedActions: function (suggestedActions) {
            this.chat.renderSuggestedActions($(suggestedActions).toArray());
        }
    });
</script>