@model EthicsCap2.Models.Login
@{
    ViewBag.Title = "Login";
    Layout = null;

}
@section JavaScript
{
    <script type="text/javascript" src="@Url.Content("~/js/Login.js")"></script>
}
<html>
<head>
    <link href="@Url.Content("~/css/Login.css")" rel="stylesheet" type="text/css" />

</head>
<body>

    <div>
        <p>Regulatory IQ</p>
    </div>

    <div class="login-page">
        <div class="form">
            <form class="register-form">
                <input type="text" placeholder="name" />
                <input type="password" placeholder="password" />
                <input type="text" placeholder="email address" />
                <button>create</button>
                <p class="message">
                    Already registered?
                    @Html.ActionLink("Sign In", "Index", "Home")
                </p>
            </form>
            <form class="login-form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(m => m.CompanyId, // Store selected value in Model.State

                             // This argument needs some explanation - here we take a Distionary<string, string>
                             // and turn it into an instance of SelectList, see blog post for more details
                             new SelectList(ViewBag.Companies, "Key", "Value"),

                             // Text for the first 'default' option
                             "- Please select your company -",

                             // A class name to put on the "<select>"
                             new { @class = "form-control" }
                             )
                        @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                @*<input type="text" placeholder="username" />
        <input type="password" placeholder="password" />*@
                <button>login</button>
                <div class="message">
                    Not registered?
                    @Html.ActionLink("Create an account", "Register", "Login")
                </div>
            </form>
        </div>
    </div>
</body>
</html>